/**
 * The complete address space of the computer's memory,
 * including RAM and memory mapped I/O.
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: If load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory
 * location specified by address. If load=1, the in value is loaded
 * into the memory location specified by address.  This value becomes
 * available through the out output starting from the next time step.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used.
 * Access to address>0x6000 is invalid. Access to any address in
 * the range 0x4000–0x5FFF results in accessing the screen memory
 * map. Access to address 0x6000 results in accessing the keyboard
 * memory map. The behavior in these addresses is described in the
 * Screen and Keyboard chip specifications.
 */

// Memory:   0000000000000000 - 0011111111111111
// Screen:   0100000000000000 - 0101111111111111
// Keyboard: 0110000000000000

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    Not(in=address[14], out=mem);
    Not(in=address[13], out=x);
    And(a=x, b=address[14], out=scr);
    And(a=address[13], b=address[14], out=kbd);

    And(a=mem, b=load, out=loadmem);
    And(a=scr, b=load, out=loadscr);

    RAM16K(in=in, load=loadmem, address=address[0..13], out=outram);
    Screen(in=in, load=loadscr, address=address[0..12], out=outscr);
    Keyboard(out=outkbd);

    Mux4Way16(a=outram, b=outram, c=outscr, d=outkbd,
              sel=address[13..14], out=out);
}
